import pandas as pd
import sqlalchemy

def extract(path):
    #Dyllan Raza

    Databasec = sqlalchemy.create_engine(path)
    conn = Databasec.connect()

    return Databasec, conn

def extract_n(path):
    
    Databasen = sqlalchemy.create_engine(path)
    conn_n = Databasen.connect()

    return Databasen, conn_n

def transformacion_album(connDB):

    query = """SELECT AlbumId,Title FROM albums;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_employee(connDB):

    query = """SELECT EmployeeId, LastName,FirstName,Title as Title_Employee,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email 
                FROM employees;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_genres(connDB):

    query = """SELECT GenreId,Name AS Name_Genre FROM genres;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_customer(connDB):

    query = """SELECT CustomerId, FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email 
            FROM customers;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_artista(connDB):

    query = """SELECT ArtistId,Name as Name_Artist FROM artists;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_inv_it(connDB):

    query = """SELECT InvoiceLineId,UnitPrice,Quantity FROM invoice_items;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_playl(connDB):

    query = """SELECT PlaylistId,Name AS Name_playlist FROM playlists;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def transformacion_location(connDB):

    query = """SELECT 
        CustomerId as LocationId, 
        Address, 
        City, 
        COALESCE(State, 'N/A') as State, 
        Country, 
        COALESCE(PostalCode, 'N/A') as PostalCode 
        FROM customers;"""
    result = connDB.execute(query)

    df = pd.DataFrame(result.fetchall())
    df.columns = result.keys()

    return df

def load(datos, connectar, tabla):

    # Ingreso de datos en la tabla correspondiente con su conexión
    datos.to_sql(tabla, connectar, if_exists='append', index=False)
    connectar.close()
    return print("Datos cargados")

if __name__ == '__main__':
    direccion1 = "sqlite:///chinook.db"
    direccion2 = "sqlite:///dw_Sales_Music.db"

    # Extración de la BD Chinook
    extraerBD = extract(direccion1)
    
    #Definición de la conexión secundaria
    DatabaseEx = extract_n(direccion2)
    connex = DatabaseEx[1]

    #Extracción de cada tabla 
    engine = extraerBD[0]
    extraer1 = transformacion_album(engine)
    extraer2 = transformacion_employee(engine)
    extraer3 = transformacion_genres(engine)
    extraer4 = transformacion_customer(engine)
    extraer5 = transformacion_artista(engine)
    extraer6 = transformacion_inv_it(engine)
    extraer7 = transformacion_playl(engine)
    extraer8 = transformacion_location(engine)

    #Definición de tabla
    tabla1 = "dim_album"
    tabla2 = "dim_employee"
    tabla3 = "dim_genres"
    tabla4 = "dim_customer"
    tabla5 = "dim_artist"
    tabla6 = "dim_invoice_items"
    tabla7 = "dim_playlist"
    tabla8 = "dim_location"

    #Proceso de carga
    load(extraer1, connex, tabla1)
    load(extraer2, connex, tabla2)  
    load(extraer3, connex, tabla3)
    load(extraer4, connex, tabla4)
    load(extraer5, connex, tabla5)
    load(extraer6, connex, tabla6)
    load(extraer7, connex, tabla7)
    load(extraer8, connex, tabla8)
    print("ETL completada")
